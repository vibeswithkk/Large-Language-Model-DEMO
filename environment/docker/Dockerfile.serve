# Serving Dockerfile with CUDA support for model API
FROM nvidia/cuda:12.1-runtime-ubuntu22.04

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    wget \
    ca-certificates \
    python3.10 \
    python3.10-dev \
    python3.10-distutils \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

# Upgrade pip and install setuptools
RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel

# Install uvloop and httptools for better FastAPI performance
RUN pip3 install --no-cache-dir uvloop httptools

# Copy requirements file
COPY requirements.txt .

# Install Python dependencies with CUDA optimizations
RUN pip3 install --no-cache-dir -r requirements.txt

# Install only serving-related dependencies
RUN pip3 install --no-cache-dir \
    fastapi \
    uvicorn[standard] \
    pydantic \
    torch \
    torchvision \
    torchaudio

# Create directories for models and logs
RUN mkdir -p models logs

# Copy project files
COPY . .

# Set proper permissions
RUN chmod -R 755 /app

# Create non-root user with proper permissions
RUN useradd --create-home --shell /bin/bash --uid 1000 server && \
    chown -R server:server /app && \
    usermod -aG sudo server

# Switch to non-root user
USER server

# Expose API port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set entrypoint for serving
ENTRYPOINT ["python", "src/serving/api.py"]