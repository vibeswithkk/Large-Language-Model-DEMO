# Development Dockerfile with CUDA support
FROM nvidia/cuda:12.1-devel-ubuntu22.04

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    ca-certificates \
    software-properties-common \
    python3.10 \
    python3.10-dev \
    python3.10-distutils \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.10 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1

# Upgrade pip and install setuptools
RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel

# Install Python dependencies with CUDA optimizations
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Install additional tools for development
RUN pip3 install --no-cache-dir \
    jupyter \
    jupyterlab \
    ipykernel \
    tensorboard \
    pytest \
    black \
    flake8 \
    mypy

# Create directories for data and outputs
RUN mkdir -p data output logs

# Copy project files
COPY . .

# Set proper permissions
RUN chmod -R 755 /app

# Expose ports
EXPOSE 8000 8888 6006

# Create non-root user with proper permissions
RUN useradd --create-home --shell /bin/bash --uid 1000 developer && \
    chown -R developer:developer /app && \
    usermod -aG sudo developer

# Switch to non-root user
USER developer

# Set entrypoint
ENTRYPOINT ["/bin/bash"]